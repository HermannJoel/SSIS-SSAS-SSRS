/*
Deployment script for AdventureworksLTDW2016

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AdventureworksLTDW2016"
:setvar DefaultFilePrefix "AdventureworksLTDW2016"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--:R DimensionsUnknownMembers.sql
--SystmeLog.Loads unkmown member
IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[Loads] AS [l]
                WHERE
                    [l].[LoadId] = -1 )
    BEGIN
        SET IDENTITY_INSERT [SystemLog].[Loads] ON;
        INSERT  INTO [SystemLog].[Loads]
                ([LoadId]
                ,[LoadStartDateTime]
                ,[LoadEndDateTime]
                )
        VALUES
                (-1
                ,CAST('1900-01-01' AS DATETIME)
                ,CAST('1900-01-01' AS DATETIME)
		        );
        SET IDENTITY_INSERT [SystemLog].[Loads] OFF;
    END;


	--ExecutionMessageTypes fixed members
IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionMessageTypes]
                WHERE
                    [ExecutionMessageTypeId] = 1 )
    BEGIN
        INSERT  [SystemLog].[ExecutionMessageTypes]
                ([ExecutionMessageTypeId]
                ,[ExecutionMessageTypeName]
                ,[ExecutionMessageTypeDescription]
                )
        VALUES
                (1
                ,N'Error'
                ,N'The message logged contains the error derscription.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionMessageTypes]
                WHERE
                    [ExecutionMessageTypeId] = 2 )
    BEGIN
        INSERT  [SystemLog].[ExecutionMessageTypes]
                ([ExecutionMessageTypeId]
                ,[ExecutionMessageTypeName]
                ,[ExecutionMessageTypeDescription]
                )
        VALUES
                (2
                ,N'Warning'
                ,N'The message logged is a warning.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionMessageTypes]
                WHERE
                    [ExecutionMessageTypeId] = 3 )
    BEGIN
        INSERT  [SystemLog].[ExecutionMessageTypes]
                ([ExecutionMessageTypeId]
                ,[ExecutionMessageTypeName]
                ,[ExecutionMessageTypeDescription]
                )
        VALUES
                (3
                ,N'Information'
                ,N'The message logged is informative only.'
                );
    END;


--ExecutionStatus fixed members
IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 1 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (1
                ,N'Execution created'
                ,N'The SSIS execution has been initiated.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 2 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (2
                ,N'Running'
                ,N'The SSIS execution is currently running.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 3 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (3
                ,N'Cancelled'
                ,N'The SSIS execution has been cancelled.'
                );
    END;


IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 4 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (4
                ,N'Failed'
                ,N'The SSIS execution encountered errors.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 5 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (5
                ,N'Pending'
                ,N'The SSIS execution is pending.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 6 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (6
                ,N'Ended unexpectedly'
                ,N'The SSIS execution could not finish.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 7 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (7
                ,N'Succeeded'
                ,N'The SSIS execution completed successfully.'
                );
    END;

IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 8 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (8
                ,N'Stopping'
                ,N'The SSIS execution is currently stopping.'
                );
    END;
IF NOT EXISTS ( SELECT TOP 1
                    1
                FROM
                    [SystemLog].[ExecutionStatus]
                WHERE
                    [ExecutionStatusId] = 9 )
    BEGIN
        INSERT  [SystemLog].[ExecutionStatus]
                ([ExecutionStatusId]
                ,[ExecutionStatusName]
                ,[ExecutionStatusDescription]
                )
        VALUES
                (9
                ,N'Completed'
                ,N'The SSIS execution has completed.'
                );
    END;
GO

GO
PRINT N'Update complete.';


GO
