/*
Deployment script for AdventureworksLTDW2016

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AdventureworksLTDW2016"
:setvar DefaultFilePrefix "AdventureworksLTDW2016"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key ac6d18e3-0304-4103-a9df-9a1e7208ab8b is skipped, element [SystemLog].[LoadExecutions].[Id] (SqlSimpleColumn) will not be renamed to LoadExecutionId';


GO
PRINT N'Rename refactoring operation with key af2a52ef-9849-474a-8e2f-aaa73c1b87c7 is skipped, element [SystemLog].[ExecutionStatictics].[Id] (SqlSimpleColumn) will not be renamed to ExecutionId';


GO
PRINT N'Creating [SystemLog].[ExecutionMessages]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [SystemLog].[ExecutionMessages] (
    [ExecutionMessageId] BIGINT          IDENTITY (1, 1) NOT NULL,
    [LoadExecutionId]    BIGINT          NOT NULL,
    [MessageType]        NVARCHAR (20)   NOT NULL,
    [ExecutionMessage]   NVARCHAR (4000) NOT NULL,
    CONSTRAINT [PK_ExecutionMessages] PRIMARY KEY CLUSTERED ([ExecutionMessageId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [SystemLog].[ExecutionStatictics]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [SystemLog].[ExecutionStatictics] (
    [ExecutionId]              BIGINT             IDENTITY (1, 1) NOT NULL,
    [LoadExecutionId]          BIGINT             NOT NULL,
    [SSISPackageName]          NVARCHAR (260)     NOT NULL,
    [SSISPackageStartDateTime] DATETIMEOFFSET (7) NOT NULL,
    [SSISPackageEndDateTime]   DATETIMEOFFSET (7) NOT NULL,
    [DataFlowPathIdString]     NVARCHAR (4000)    NOT NULL,
    [SourceComponentName]      NVARCHAR (500)     NOT NULL,
    [DestinationComponentName] NVARCHAR (4000)    NOT NULL,
    [RowsSent]                 INT                NOT NULL,
    CONSTRAINT [PK_ExecutionStatistics] PRIMARY KEY CLUSTERED ([ExecutionId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [SystemLog].[LoadExecutions]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [SystemLog].[LoadExecutions] (
    [LoadExecutionId]        BIGINT   IDENTITY (1, 1) NOT NULL,
    [SSISServerExecutionId]  BIGINT   NOT NULL,
    [LoadId]                 BIGINT   NOT NULL,
    [ExecutionStartDateTime] DATETIME NOT NULL,
    [ExecutionEndDateTime]   DATETIME NULL,
    CONSTRAINT [PK_LoadExecutions] PRIMARY KEY CLUSTERED ([LoadExecutionId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [SystemLog].[Loads]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [SystemLog].[Loads] (
    [LoadId]            INT      IDENTITY (1, 1) NOT NULL,
    [LoadStartDateTime] DATETIME NOT NULL,
    [LoadEndDateTime]   DATETIME NULL,
    CONSTRAINT [PK_LoadId] PRIMARY KEY CLUSTERED ([LoadId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [SystemLog].[FK_ExecutionMessages_To_LoadExecutions]...';


GO
ALTER TABLE [SystemLog].[ExecutionMessages] WITH NOCHECK
    ADD CONSTRAINT [FK_ExecutionMessages_To_LoadExecutions] FOREIGN KEY ([LoadExecutionId]) REFERENCES [SystemLog].[LoadExecutions] ([LoadExecutionId]);


GO
PRINT N'Creating [SystemLog].[FK_ExecutionStatictics_To_LoadExecutions]...';


GO
ALTER TABLE [SystemLog].[ExecutionStatictics] WITH NOCHECK
    ADD CONSTRAINT [FK_ExecutionStatictics_To_LoadExecutions] FOREIGN KEY ([LoadExecutionId]) REFERENCES [SystemLog].[LoadExecutions] ([LoadExecutionId]);


GO
PRINT N'Creating [SystemLog].[Startload]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE PROCEDURE [SystemLog].[Startload]
	@param1 int = 0,
	@param2 int
AS
	SELECT @param1, @param2
RETURN 0
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ac6d18e3-0304-4103-a9df-9a1e7208ab8b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ac6d18e3-0304-4103-a9df-9a1e7208ab8b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'af2a52ef-9849-474a-8e2f-aaa73c1b87c7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('af2a52ef-9849-474a-8e2f-aaa73c1b87c7')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [SystemLog].[ExecutionMessages] WITH CHECK CHECK CONSTRAINT [FK_ExecutionMessages_To_LoadExecutions];

ALTER TABLE [SystemLog].[ExecutionStatictics] WITH CHECK CHECK CONSTRAINT [FK_ExecutionStatictics_To_LoadExecutions];


GO
PRINT N'Update complete.';


GO
